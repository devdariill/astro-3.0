---
interface Props {
  id: string
  img: string
  success: boolean
  flightNumber: number
  details: string | null
}
const { success, flightNumber, img, id, details } = Astro.props
const launchStatus = success ? 'success' : 'failure'

// const anim = {
//   old: {
//     name: 'fadeIn',
//     duration: '1.2s',
//     easing: 'linear',
//     fillMode: 'forwards',
//   },
//   new: {
//     name: 'fadeOut',
//     duration: '2.3s',
//     easing: 'linear',
//     fillMode: 'backwards',
//   }
// };

// const myFade = {
//   forwards: anim,
//   backwards: anim,
// };

---

<a
  href={`/launch/${id}`}
  class='rounded-lg border shadow-md bg-gray-800 border-gray-700 hover:scale-105 hover:bg-gray-700 hover:border-gray-500 transition flex flex-col'
>
  <picture class='flex justify-center p-4'>
    <!-- <img class='mb-5 rounded-lg' src={img} alt=''  transition:name="img"  transition:animate={fade({duration:'2s'})} /> -->
    <!-- <img class='mb-5 rounded-lg' src={img} alt=''  transition:name="img" transition:animate={myFade} /> -->
    <img class='mb-5 rounded-lg' src={img} alt=''  transition:name="img" transition:animate="slide" />
  </picture>

  <header class="p-4 flex-grow">
    <span 
    class:list={["text-xs font-semibold mr-2 px-2.5 py-0.5 rounded",
    {
      "bg-green-100 text-green-800": success,
      "bg-red-100 text-red-800": !success,
    }]
      
    }
    class="">{launchStatus}</span>
    <h2 class="my-2 text-2xl font-bold tracking-tight text-white">Flight # {flightNumber}</h2>
    <p class="mb-4 font-light text-gray-400">{details && details?.length > 100 ? details.slice(0,100) + "..." : details}</p>
  </header>
</a>
